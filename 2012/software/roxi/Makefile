#############################################################################
# Makefile for building: candi
# Generated by qmake (2.01a) (Qt 4.7.2) on: Tue Feb 7 16:52:09 2012
# Project:  candi.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile candi.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -fopenmp -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -fopenmp -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/include/opencv -I/usr/local/include/opencv -I/usr/include/qt4/Qt -I../old_motors -I. -Ivision -Imapping -Ipotentialfields -Ilogging -Ipathplan -IRobotPosition -I.
LINK          = g++
LFLAGS        = -fopenmp
LIBS          = $(SUBLIBS)  -L/usr/lib -L /usr/local/lib -lltdl -lm -lGL -ldc1394 -lglut -lcv -lcvaux -lhighgui -lQtXml -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		Robot.cpp \
		XmlConfiguration.cpp \
		mapping/cvcorrImages.cpp \
		mapping/mapgen.cpp \
		mapping/PointParamEstimator.cpp \
		pathplan/PathPlan.cpp \
		potentialfields/commonVecOps.cc \
		potentialfields/potentialfields.cc \
		potentialfields/test.cc \
		RobotPosition/EncoderTracking.cpp \
		RobotPosition/MagnetometerTracking.cpp \
		RobotPosition/RobotPosition.cpp \
		RobotPosition/RobotPosTest.cpp \
		vision/CVcam.cpp \
		vision/DCam.cpp \
		vision/DCam_Config.cpp \
		vision/GuppyCam.cpp \
		vision/image_buffers.cpp \
		vision/PjMat.cc \
		vision/vision.cc moc_DCam_Config.cpp
OBJECTS       = main.o \
		Robot.o \
		XmlConfiguration.o \
		cvcorrImages.o \
		mapgen.o \
		PointParamEstimator.o \
		PathPlan.o \
		commonVecOps.o \
		potentialfields.o \
		test.o \
		EncoderTracking.o \
		MagnetometerTracking.o \
		RobotPosition.o \
		RobotPosTest.o \
		CVcam.o \
		DCam.o \
		DCam_Config.o \
		GuppyCam.o \
		image_buffers.o \
		PjMat.o \
		vision.o \
		moc_DCam_Config.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		candi.pro
QMAKE_TARGET  = candi
DESTDIR       = 
TARGET        = candi

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: candi.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile candi.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile candi.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/candi1.0.0 || $(MKDIR) .tmp/candi1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/candi1.0.0/ && $(COPY_FILE) --parents main.h Robot.h XmlConfiguration.h logging/bottime.h logging/timer.h mapping/cvcorrImages.h mapping/mapgen.h mapping/ParameterEstimator.h mapping/PointParamEstimator.h mapping/Ransac.h pathplan/PathPlan.h pathplan/shape.h potentialfields/commonVecOps.hpp potentialfields/gps_points.hpp potentialfields/potentialfields.hpp RobotPosition/EncoderTracking.hpp RobotPosition/MagnetometerTracking.hpp RobotPosition/RobotPosition.hpp vision/Base.h vision/CVcam.h vision/DCam.h vision/DCam_Config.h vision/Graphics.h vision/GuppyCam.h vision/image_buffers.h vision/PjMat.h vision/Point2D.h vision/types.h vision/vision.h .tmp/candi1.0.0/ && $(COPY_FILE) --parents main.cpp Robot.cpp XmlConfiguration.cpp mapping/cvcorrImages.cpp mapping/mapgen.cpp mapping/PointParamEstimator.cpp pathplan/PathPlan.cpp potentialfields/commonVecOps.cc potentialfields/potentialfields.cc potentialfields/test.cc RobotPosition/EncoderTracking.cpp RobotPosition/MagnetometerTracking.cpp RobotPosition/RobotPosition.cpp RobotPosition/RobotPosTest.cpp vision/CVcam.cpp vision/DCam.cpp vision/DCam_Config.cpp vision/GuppyCam.cpp vision/image_buffers.cpp vision/PjMat.cc vision/vision.cc .tmp/candi1.0.0/ && (cd `dirname .tmp/candi1.0.0` && $(TAR) candi1.0.0.tar candi1.0.0 && $(COMPRESS) candi1.0.0.tar) && $(MOVE) `dirname .tmp/candi1.0.0`/candi1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/candi1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_DCam_Config.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_DCam_Config.cpp
moc_DCam_Config.cpp: vision/DCam_Config.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) vision/DCam_Config.h -o moc_DCam_Config.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp main.h \
		Robot.h \
		vision/CVcam.h \
		vision/GuppyCam.h \
		vision/DCam.h \
		vision/Base.h \
		vision/DCam_Config.h \
		vision/Point2D.h \
		vision/vision.h \
		vision/image_buffers.h \
		mapping/mapgen.h \
		mapping/cvcorrImages.h \
		vision/Graphics.h \
		potentialfields/potentialfields.hpp \
		potentialfields/gps_points.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

Robot.o: Robot.cpp Robot.h \
		vision/CVcam.h \
		vision/GuppyCam.h \
		vision/DCam.h \
		vision/Base.h \
		vision/DCam_Config.h \
		vision/Point2D.h \
		vision/vision.h \
		vision/image_buffers.h \
		mapping/mapgen.h \
		mapping/cvcorrImages.h \
		vision/Graphics.h \
		potentialfields/potentialfields.hpp \
		potentialfields/gps_points.hpp \
		main.h \
		vision/PjMat.h \
		XmlConfiguration.h \
		logging/timer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Robot.o Robot.cpp

XmlConfiguration.o: XmlConfiguration.cpp XmlConfiguration.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o XmlConfiguration.o XmlConfiguration.cpp

cvcorrImages.o: mapping/cvcorrImages.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cvcorrImages.o mapping/cvcorrImages.cpp

mapgen.o: mapping/mapgen.cpp mapping/mapgen.h \
		vision/Point2D.h \
		mapping/cvcorrImages.h \
		vision/image_buffers.h \
		vision/Graphics.h \
		XmlConfiguration.h \
		mapping/PointParamEstimator.h \
		mapping/ParameterEstimator.h \
		mapping/Ransac.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mapgen.o mapping/mapgen.cpp

PointParamEstimator.o: mapping/PointParamEstimator.cpp mapping/PointParamEstimator.h \
		mapping/ParameterEstimator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PointParamEstimator.o mapping/PointParamEstimator.cpp

PathPlan.o: pathplan/PathPlan.cpp pathplan/PathPlan.h \
		pathplan/shape.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PathPlan.o pathplan/PathPlan.cpp

commonVecOps.o: potentialfields/commonVecOps.cc potentialfields/commonVecOps.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o commonVecOps.o potentialfields/commonVecOps.cc

potentialfields.o: potentialfields/potentialfields.cc potentialfields/potentialfields.hpp \
		potentialfields/gps_points.hpp \
		vision/Point2D.h \
		potentialfields/commonVecOps.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o potentialfields.o potentialfields/potentialfields.cc

test.o: potentialfields/test.cc potentialfields/potentialfields.hpp \
		potentialfields/gps_points.hpp \
		vision/Point2D.h \
		potentialfields/commonVecOps.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o test.o potentialfields/test.cc

EncoderTracking.o: RobotPosition/EncoderTracking.cpp RobotPosition/EncoderTracking.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EncoderTracking.o RobotPosition/EncoderTracking.cpp

MagnetometerTracking.o: RobotPosition/MagnetometerTracking.cpp RobotPosition/MagnetometerTracking.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MagnetometerTracking.o RobotPosition/MagnetometerTracking.cpp

RobotPosition.o: RobotPosition/RobotPosition.cpp RobotPosition/RobotPosition.hpp \
		RobotPosition/MagnetometerTracking.hpp \
		RobotPosition/EncoderTracking.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RobotPosition.o RobotPosition/RobotPosition.cpp

RobotPosTest.o: RobotPosition/RobotPosTest.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RobotPosTest.o RobotPosition/RobotPosTest.cpp

CVcam.o: vision/CVcam.cpp vision/CVcam.h \
		main.h \
		vision/image_buffers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CVcam.o vision/CVcam.cpp

DCam.o: vision/DCam.cpp vision/DCam.h \
		vision/Base.h \
		vision/DCam_Config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DCam.o vision/DCam.cpp

DCam_Config.o: vision/DCam_Config.cpp vision/DCam.h \
		vision/Base.h \
		vision/DCam_Config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DCam_Config.o vision/DCam_Config.cpp

GuppyCam.o: vision/GuppyCam.cpp vision/GuppyCam.h \
		vision/DCam.h \
		vision/Base.h \
		vision/DCam_Config.h \
		XmlConfiguration.h \
		vision/image_buffers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GuppyCam.o vision/GuppyCam.cpp

image_buffers.o: vision/image_buffers.cpp vision/image_buffers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o image_buffers.o vision/image_buffers.cpp

PjMat.o: vision/PjMat.cc vision/PjMat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PjMat.o vision/PjMat.cc

vision.o: vision/vision.cc vision/vision.h \
		vision/Point2D.h \
		XmlConfiguration.h \
		vision/image_buffers.h \
		vision/Graphics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vision.o vision/vision.cc

moc_DCam_Config.o: moc_DCam_Config.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_DCam_Config.o moc_DCam_Config.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

