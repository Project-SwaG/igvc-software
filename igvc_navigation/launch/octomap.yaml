octree:
  resolution: 0.2
  lazy_evaluation: false
  clamping:
      max: 1.0
      min: 0.0
# P(Hit | x) where x is either miss or hit. So prob_miss: 0.2 means that I'm 20% confident a miss is a hit,
# ie. I'm 80% confident a miss is a miss.
probability_model:
    lidar:
        scan:
          prob_miss: 0.2
          prob_hit: 0.9
        ground:
          prob_miss: 0.4
          prob_hit: 0.6 # Not used
        free_space:
          prob_miss: 0.48
          prob_hit: 0.6 # Not used
    camera:
        prob_miss: 0.45
        prob_hit: 0.9
sensor_model:
    max_range: 50
    angular_resolution: 0.01
filters:
    behind:
        filter_angle: 2
        distance: 3
    empty:
        start_angle: -0.5
        end_angle: 0.5
        miss_cast_distance: 15
    empty_image:
        blur:
            kernel: 17
            sigma: 11
        threshold: 0.5
    combined_map:
        blur:
            kernel: 3
    ground_filter:
        enable: false
        ransac:
            iterations: 200
            distance_threshold: 0.05
            eps_angle: 0.15
        fallback:
            plane_distance: 0.04
map:
  # In units of meters, not cells
  # width of grid = width / resolution
  length: 200
  width: 200
  start_x: 100
  start_y: 100
  encoding: "CV_8UC1"
  log_odds_default: 0
segmented_free_space:
  kernel_size: 3
  std_dev: 3
  threshold: 127 #0 - 255
topics:
  lidar: "/scan/pointcloud"
  line_segmentation: "/semantic_segmentation"
  projected_line_pc: "/semantic_segmentation_cloud"
  camera_info: "/usb_cam_center/camera_info"
node:
  debug: true
  use_lines: false
  transform_max_wait_time: 1
cameras:
  resize_width: 400
  resize_height: 400
